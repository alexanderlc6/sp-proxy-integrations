dubbo.provider.filter=serviceFilter
logging.config = classpath:log4j2.xml

spring.project.name=sp-low-code-platform
spring.application.name=sp-invocation-proxy-api


## Apollo 应用ID： 项目编码--应用编码
#app.id=o2o-support--o2o-support-idaas-dubbo
## 开发DEV：http://apollo-dev-sh.yonghui.cn:8080,http://apollo-dev-fz.yonghui.cn:8080
## 测试SIT：http://apollo-sit-sh.yonghui.cn:8080,http://apollo-sit-fz.yonghui.cn:8080
## 预发UAT：http://apollo-uat-sh.yonghui.cn:8080,http://apollo-uat-fz.yonghui.cn:8080
## 生产地址由运维配置 (多个中心配置请用逗号拼接http://apollo-dev-sh.yonghui.cn:8080,http://apollo-dev-fz.yonghui.cn:8080)
#apollo.meta=http://apollo-dev-sh.yonghui.cn:8080
## 集群 SH/FZ
#apollo.cluster=SH
## 缓存地址
#apollo.cacheDir=/opt/data/apollo-cache
## 是否启用配置中心
#apollo.bootstrap.enabled=true
## 配置文件名称，properties格式的配置文件只需要名称，不需要后缀名*.properties
#apollo.bootstrap.namespaces=application,application.yml
## 使Apollo的加载顺序放到日志系统加载之前，不过这会导致Apollo的启动过程无法通过日志的方式输出(因为执行Apollo加载的时候，日志系统压根没有准备好
#apollo.bootstrap.eagerLoad.enabled=true